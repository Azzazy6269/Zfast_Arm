

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Nov 08 16:05:11 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 17/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   0013DA                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _port_registers
    69   0013DA  80                 	db	128
    70   0013DB  0F                 	db	15
    71   0013DC  81                 	db	129
    72   0013DD  0F                 	db	15
    73   0013DE  82                 	db	130
    74   0013DF  0F                 	db	15
    75   0013E0  83                 	db	131
    76   0013E1  0F                 	db	15
    77   0013E2  84                 	db	132
    78   0013E3  0F                 	db	15
    79                           
    80                           ;initializer for _lat_registers
    81   0013E4  89                 	db	137
    82   0013E5  0F                 	db	15
    83   0013E6  8A                 	db	138
    84   0013E7  0F                 	db	15
    85   0013E8  8B                 	db	139
    86   0013E9  0F                 	db	15
    87   0013EA  8C                 	db	140
    88   0013EB  0F                 	db	15
    89   0013EC  8D                 	db	141
    90   0013ED  0F                 	db	15
    91                           
    92                           ;initializer for _tris_registers
    93   0013EE  92                 	db	146
    94   0013EF  0F                 	db	15
    95   0013F0  93                 	db	147
    96   0013F1  0F                 	db	15
    97   0013F2  94                 	db	148
    98   0013F3  0F                 	db	15
    99   0013F4  95                 	db	149
   100   0013F5  0F                 	db	15
   101   0013F6  96                 	db	150
   102   0013F7  0F                 	db	15
   103                           
   104                           ;initializer for _dc_motor_2
   105   0013F8  92                 	db	146
   106   0013F9  9A                 	db	154
   107                           
   108                           ;initializer for _dc_motor_1
   109   0013FA  82                 	db	130
   110   0013FB  8A                 	db	138
   111                           
   112                           	psect	nvCOMRAM
   113   000037                     __pnvCOMRAM:
   114                           	callstack 0
   115   000037                     _ret:
   116                           	callstack 0
   117   000037                     	ds	1
   118   000000                     _PORTE	set	3972
   119   000000                     _PORTD	set	3971
   120   000000                     _PORTC	set	3970
   121   000000                     _PORTB	set	3969
   122   000000                     _PORTA	set	3968
   123   000000                     _LATA	set	3977
   124   000000                     _TRISA	set	3986
   125   000000                     _TRISE	set	3990
   126   000000                     _TRISD	set	3989
   127   000000                     _TRISC	set	3988
   128   000000                     _TRISB	set	3987
   129   000000                     _LATE	set	3981
   130   000000                     _LATD	set	3980
   131   000000                     _LATC	set	3979
   132   000000                     _LATB	set	3978
   133                           
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   0012F2                     __pcinit:
   138                           	callstack 0
   139   0012F2                     start_initialization:
   140                           	callstack 0
   141   0012F2                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (34 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146   0012F2  0EDA               	movlw	low __pidataCOMRAM
   147   0012F4  6EF6               	movwf	tblptrl,c
   148   0012F6  0E13               	movlw	high __pidataCOMRAM
   149   0012F8  6EF7               	movwf	tblptrh,c
   150   0012FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151   0012FC  6EF8               	movwf	tblptru,c
   152   0012FE  EE00  F001         	lfsr	0,__pdataCOMRAM
   153   001302  EE10 F022          	lfsr	1,34
   154   001306                     copy_data0:
   155   001306  0009               	tblrd		*+
   156   001308  CFF5 FFEE          	movff	tablat,postinc0
   157   00130C  50E5               	movf	postdec1,w,c
   158   00130E  50E1               	movf	fsr1l,w,c
   159   001310  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (6 bytes)
   162   001312  6A36               	clrf	(__pbssCOMRAM+5)& (0+255),c
   163   001314  6A35               	clrf	(__pbssCOMRAM+4)& (0+255),c
   164   001316  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
   165   001318  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
   166   00131A  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167   00131C  6A31               	clrf	__pbssCOMRAM& (0+255),c
   168   00131E                     end_of_initialization:
   169                           	callstack 0
   170   00131E                     __end_of__initialization:
   171                           	callstack 0
   172   00131E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173   001320  6EF8               	movwf	tblptru,c
   174   001322  0100               	movlb	0
   175   001324  EF12  F009         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178   000031                     __pbssCOMRAM:
   179                           	callstack 0
   180   000031                     	ds	1
   181   000032                     	ds	1
   182   000033                     led_turn_toggle@F2589:
   183                           	callstack 0
   184   000033                     	ds	1
   185   000034                     led_turn_off@F2584:
   186                           	callstack 0
   187   000034                     	ds	1
   188   000035                     led_turn_on@F2579:
   189                           	callstack 0
   190   000035                     	ds	1
   191   000036                     led_intialize@F2574:
   192                           	callstack 0
   193   000036                     	ds	1
   194                           
   195                           	psect	dataCOMRAM
   196   000001                     __pdataCOMRAM:
   197                           	callstack 0
   198   000001                     _port_registers:
   199                           	callstack 0
   200   000001                     	ds	10
   201   00000B                     _lat_registers:
   202                           	callstack 0
   203   00000B                     	ds	10
   204   000015                     _tris_registers:
   205                           	callstack 0
   206   000015                     	ds	10
   207   00001F                     _dc_motor_2:
   208                           	callstack 0
   209   00001F                     	ds	2
   210   000021                     _dc_motor_1:
   211                           	callstack 0
   212   000021                     	ds	2
   213                           
   214                           	psect	cstackCOMRAM
   215   000023                     __pcstackCOMRAM:
   216                           	callstack 0
   217   000023                     gpio_pin_direction_intialize@_pin_config:
   218                           	callstack 0
   219   000023                     gpio_pin_write_logic@_pin_config:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x0
   223   000023                     	ds	1
   224   000024                     ??_gpio_pin_direction_intialize:
   225   000024                     gpio_pin_write_logic@logic:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x1
   229   000024                     	ds	1
   230   000025                     ??_gpio_pin_write_logic:
   231                           
   232                           ; 1 bytes @ 0x2
   233   000025                     	ds	4
   234   000029                     gpio_pin_direction_intialize@ret:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x6
   238   000029                     	ds	1
   239   00002A                     gpio_pin_write_logic@ret:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x7
   243   00002A                     	ds	1
   244   00002B                     dc_motor_turn_right@_dc_motor:
   245                           	callstack 0
   246   00002B                     dc_motor_turn_left@_dc_motor:
   247                           	callstack 0
   248   00002B                     dc_motor_stop@_dc_motor:
   249                           	callstack 0
   250   00002B                     gpio_pin_intialize@_pin_config:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x8
   254   00002B                     	ds	1
   255   00002C                     ??_gpio_pin_intialize:
   256   00002C                     
   257                           ; 1 bytes @ 0x9
   258   00002C                     	ds	1
   259   00002D                     gpio_pin_intialize@ret:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0xA
   263   00002D                     	ds	1
   264   00002E                     dc_motor_intialize@_dc_motor:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xB
   268   00002E                     	ds	1
   269   00002F                     ??_main:
   270                           
   271                           ; 1 bytes @ 0xC
   272   00002F                     	ds	2
   273                           
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 36 in file "application.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  2  213[None  ] int 
   286 ;; Registers used:
   287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   297 ;;Total ram usage:        2 bytes
   298 ;; Hardware stack levels required when called: 4
   299 ;; This function calls:
   300 ;;		_Go_Backward
   301 ;;		_Go_Forward
   302 ;;		_Turn_Left
   303 ;;		_Turn_Right
   304 ;;		_application_intialize
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311   001224                     __ptext0:
   312                           	callstack 0
   313   001224                     _main:
   314                           	callstack 27
   315   001224                     
   316                           ;application.c: 37:     application_intialize();
   317   001224  ECFE  F009         	call	_application_intialize	;wreg free
   318                           
   319                           ;application.c: 38:         Go_Forward();
   320   001228  EC1B  F00A         	call	_Go_Forward	;wreg free
   321   00122C                     
   322                           ;application.c: 39:         _delay((unsigned long)((10000)*(4000000/4000.0)));
   323   00122C  0E33               	movlw	51
   324   00122E  6E30               	movwf	(??_main+1)^0,c
   325   001230  0EBB               	movlw	187
   326   001232  6E2F               	movwf	??_main^0,c
   327   001234  0EE0               	movlw	224
   328   001236                     u637:
   329   001236  2EE8               	decfsz	wreg,f,c
   330   001238  D7FE               	bra	u637
   331   00123A  2E2F               	decfsz	??_main^0,f,c
   332   00123C  D7FC               	bra	u637
   333   00123E  2E30               	decfsz	(??_main+1)^0,f,c
   334   001240  D7FA               	bra	u637
   335   001242                     
   336                           ;application.c: 40:         Turn_Right();
   337   001242  EC09  F00A         	call	_Turn_Right	;wreg free
   338                           
   339                           ;application.c: 41:         _delay((unsigned long)((3000)*(4000000/4000.0)));
   340   001246  0E10               	movlw	16
   341   001248  6E30               	movwf	(??_main+1)^0,c
   342   00124A  0E39               	movlw	57
   343   00124C  6E2F               	movwf	??_main^0,c
   344   00124E  0E0E               	movlw	14
   345   001250                     u647:
   346   001250  2EE8               	decfsz	wreg,f,c
   347   001252  D7FE               	bra	u647
   348   001254  2E2F               	decfsz	??_main^0,f,c
   349   001256  D7FC               	bra	u647
   350   001258  2E30               	decfsz	(??_main+1)^0,f,c
   351   00125A  D7FA               	bra	u647
   352   00125C                     
   353                           ;application.c: 42:         Turn_Left();
   354   00125C  EC12  F00A         	call	_Turn_Left	;wreg free
   355   001260                     
   356                           ;application.c: 43:         _delay((unsigned long)((4000)*(4000000/4000.0)));
   357   001260  0E15               	movlw	21
   358   001262  6E30               	movwf	(??_main+1)^0,c
   359   001264  0E4B               	movlw	75
   360   001266  6E2F               	movwf	??_main^0,c
   361   001268  0EBE               	movlw	190
   362   00126A                     u657:
   363   00126A  2EE8               	decfsz	wreg,f,c
   364   00126C  D7FE               	bra	u657
   365   00126E  2E2F               	decfsz	??_main^0,f,c
   366   001270  D7FC               	bra	u657
   367   001272  2E30               	decfsz	(??_main+1)^0,f,c
   368   001274  D7FA               	bra	u657
   369   001276  D000               	nop2	
   370                           
   371                           ;application.c: 44:         Go_Backward();
   372   001278  EC24  F00A         	call	_Go_Backward	;wreg free
   373   00127C                     
   374                           ;application.c: 45:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   375   00127C  0E0B               	movlw	11
   376   00127E  6E30               	movwf	(??_main+1)^0,c
   377   001280  0E26               	movlw	38
   378   001282  6E2F               	movwf	??_main^0,c
   379   001284  0E5E               	movlw	94
   380   001286                     u667:
   381   001286  2EE8               	decfsz	wreg,f,c
   382   001288  D7FE               	bra	u667
   383   00128A  2E2F               	decfsz	??_main^0,f,c
   384   00128C  D7FC               	bra	u667
   385   00128E  2E30               	decfsz	(??_main+1)^0,f,c
   386   001290  D7FA               	bra	u667
   387   001292                     l214:
   388   001292  EF49  F009         	goto	l214
   389   001296  EF00  F000         	goto	start
   390   00129A                     __end_of_main:
   391                           	callstack 0
   392                           
   393 ;; *************** function _application_intialize *****************
   394 ;; Defined at:
   395 ;;		line 51 in file "application.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 3
   416 ;; This function calls:
   417 ;;		_dc_motor_intialize
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text1
   424   0013FC                     __ptext1:
   425                           	callstack 0
   426   0013FC                     _application_intialize:
   427                           	callstack 27
   428   0013FC                     
   429                           ;application.c: 52:     ret = dc_motor_intialize(&dc_motor_1);
   430   0013FC  0E21               	movlw	low _dc_motor_1
   431   0013FE  6E2E               	movwf	dc_motor_intialize@_dc_motor^0,c
   432   001400  ECD9  F009         	call	_dc_motor_intialize	;wreg free
   433   001404  6E37               	movwf	_ret^0,c
   434                           
   435                           ;application.c: 53:     ret = dc_motor_intialize(&dc_motor_2);
   436   001406  0E1F               	movlw	low _dc_motor_2
   437   001408  6E2E               	movwf	dc_motor_intialize@_dc_motor^0,c
   438   00140A  ECD9  F009         	call	_dc_motor_intialize	;wreg free
   439   00140E  6E37               	movwf	_ret^0,c
   440   001410  0012               	return		;funcret
   441   001412                     __end_of_application_intialize:
   442                           	callstack 0
   443                           
   444 ;; *************** function _dc_motor_intialize *****************
   445 ;; Defined at:
   446 ;;		line 19 in file "ECU_Layer/DC_motor/DC_motor.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  _dc_motor       1   11[COMRAM] PTR const struct .
   449 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  ret             1    0        unsigned char 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    wreg      unsigned char 
   454 ;; Registers used:
   455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   461 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;Total ram usage:        1 bytes
   466 ;; Hardware stack levels used: 1
   467 ;; Hardware stack levels required when called: 2
   468 ;; This function calls:
   469 ;;		_gpio_pin_intialize
   470 ;; This function is called by:
   471 ;;		_application_intialize
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text2
   476   0013B2                     __ptext2:
   477                           	callstack 0
   478   0013B2                     _dc_motor_intialize:
   479                           	callstack 27
   480   0013B2                     
   481                           ;ECU_Layer/DC_motor/DC_motor.c: 21:      if(((void*)0)==_dc_motor){
   482   0013B2  502E               	movf	dc_motor_intialize@_dc_motor^0,w,c
   483   0013B4  A4D8               	btfss	status,2,c
   484   0013B6  EFDF  F009         	goto	u531
   485   0013BA  EFE1  F009         	goto	u530
   486   0013BE                     u531:
   487   0013BE  EFE3  F009         	goto	l1228
   488   0013C2                     u530:
   489   0013C2                     
   490                           ;ECU_Layer/DC_motor/DC_motor.c: 24:      }else{
   491   0013C2  EFEB  F009         	goto	l1230
   492   0013C6                     l1228:
   493                           
   494                           ;ECU_Layer/DC_motor/DC_motor.c: 25:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[0]));
   495   0013C6  C02E  F02B         	movff	dc_motor_intialize@_dc_motor,gpio_pin_intialize@_pin_config
   496   0013CA  EC4D  F009         	call	_gpio_pin_intialize	;wreg free
   497                           
   498                           ;ECU_Layer/DC_motor/DC_motor.c: 26:          gpio_pin_intialize(&(_dc_motor->dc_motor_pi
      +                          n[1]));
   499   0013CE  282E               	incf	dc_motor_intialize@_dc_motor^0,w,c
   500   0013D0  6E2B               	movwf	gpio_pin_intialize@_pin_config^0,c
   501   0013D2  EC4D  F009         	call	_gpio_pin_intialize	;wreg free
   502   0013D6                     l1230:
   503                           
   504                           ;ECU_Layer/DC_motor/DC_motor.c: 28:      return (Std_ReturnType)0x01;
   505   0013D6  0E01               	movlw	1
   506   0013D8  0012               	return		;funcret
   507   0013DA                     __end_of_dc_motor_intialize:
   508                           	callstack 0
   509                           
   510 ;; *************** function _gpio_pin_intialize *****************
   511 ;; Defined at:
   512 ;;		line 133 in file "MCAL_Layer/GPIO/hal_gpio.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  _pin_config     1    8[COMRAM] PTR const struct .
   515 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   516 ;;		 -> led_intialize@pin_obj(1), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  ret             1   10[COMRAM] unsigned char 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      unsigned char 
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        3 bytes
   533 ;; Hardware stack levels used: 1
   534 ;; Hardware stack levels required when called: 1
   535 ;; This function calls:
   536 ;;		_gpio_pin_direction_intialize
   537 ;;		_gpio_pin_write_logic
   538 ;; This function is called by:
   539 ;;		_dc_motor_intialize
   540 ;;		_led_intialize
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text3
   545   00129A                     __ptext3:
   546                           	callstack 0
   547   00129A                     _gpio_pin_intialize:
   548                           	callstack 27
   549   00129A                     
   550                           ;MCAL_Layer/GPIO/hal_gpio.c: 135:      if(((void*)0)==_pin_config || _pin_config->pin >8
      +                           -1){
   551   00129A  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   552   00129C  B4D8               	btfsc	status,2,c
   553   00129E  EF53  F009         	goto	u511
   554   0012A2  EF55  F009         	goto	u510
   555   0012A6                     u511:
   556   0012A6  EF65  F009         	goto	l1218
   557   0012AA                     u510:
   558   0012AA  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   559   0012AC  6ED9               	movwf	fsr2l,c
   560   0012AE  6ADA               	clrf	fsr2h,c
   561   0012B0  30DF               	rrcf	223,w,c
   562   0012B2  32E8               	rrcf	wreg,f,c
   563   0012B4  32E8               	rrcf	wreg,f,c
   564   0012B6  0B07               	andlw	7
   565   0012B8  6E2C               	movwf	??_gpio_pin_intialize^0,c
   566   0012BA  0E07               	movlw	7
   567   0012BC  642C               	cpfsgt	??_gpio_pin_intialize^0,c
   568   0012BE  EF63  F009         	goto	u521
   569   0012C2  EF65  F009         	goto	u520
   570   0012C6                     u521:
   571   0012C6  EF67  F009         	goto	l1220
   572   0012CA                     u520:
   573   0012CA                     l1218:
   574                           
   575                           ;MCAL_Layer/GPIO/hal_gpio.c: 138:      }else{
   576   0012CA  EF78  F009         	goto	l150
   577   0012CE                     l1220:
   578                           
   579                           ;MCAL_Layer/GPIO/hal_gpio.c: 139:          ret = gpio_pin_direction_intialize( _pin_conf
      +                          ig );
   580   0012CE  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_direction_intialize@_pin_config
   581   0012D2  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   582   0012D6  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   583                           
   584                           ;MCAL_Layer/GPIO/hal_gpio.c: 140:          ret = gpio_pin_write_logic(_pin_config ,_pin_
      +                          config-> logic);
   585   0012D8  C02B  F023         	movff	gpio_pin_intialize@_pin_config,gpio_pin_write_logic@_pin_config
   586   0012DC  502B               	movf	gpio_pin_intialize@_pin_config^0,w,c
   587   0012DE  6ED9               	movwf	fsr2l,c
   588   0012E0  6ADA               	clrf	fsr2h,c
   589   0012E2  0E00               	movlw	0
   590   0012E4  BEDF               	btfsc	indf2,7,c
   591   0012E6  0E01               	movlw	1
   592   0012E8  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   593   0012EA  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   594   0012EE  6E2D               	movwf	gpio_pin_intialize@ret^0,c
   595   0012F0                     l150:
   596   0012F0  0012               	return		;funcret
   597   0012F2                     __end_of_gpio_pin_intialize:
   598                           	callstack 0
   599                           
   600 ;; *************** function _gpio_pin_direction_intialize *****************
   601 ;; Defined at:
   602 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  _pin_config     1    0[COMRAM] PTR const struct .
   605 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
   606 ;;		 -> led_intialize@pin_obj(1), 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  ret             1    6[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      unsigned char 
   611 ;; Registers used:
   612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        7 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_gpio_pin_intialize
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text4
   632   001002                     __ptext4:
   633                           	callstack 0
   634   001002                     _gpio_pin_direction_intialize:
   635                           	callstack 27
   636   001002                     
   637                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
   638   001002  0E01               	movlw	1
   639   001004  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
   640                           
   641                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if(((void*)0)==_pin_config || _pin_config->pin >8 -
      +                          1){
   642   001006  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   643   001008  B4D8               	btfsc	status,2,c
   644   00100A  EF09  F008         	goto	u461
   645   00100E  EF0B  F008         	goto	u460
   646   001012                     u461:
   647   001012  EF1B  F008         	goto	l1200
   648   001016                     u460:
   649   001016  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   650   001018  6ED9               	movwf	fsr2l,c
   651   00101A  6ADA               	clrf	fsr2h,c
   652   00101C  30DF               	rrcf	223,w,c
   653   00101E  32E8               	rrcf	wreg,f,c
   654   001020  32E8               	rrcf	wreg,f,c
   655   001022  0B07               	andlw	7
   656   001024  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
   657   001026  0E07               	movlw	7
   658   001028  6424               	cpfsgt	??_gpio_pin_direction_intialize^0,c
   659   00102A  EF19  F008         	goto	u471
   660   00102E  EF1B  F008         	goto	u470
   661   001032                     u471:
   662   001032  EF72  F008         	goto	l1208
   663   001036                     u470:
   664   001036                     l1200:
   665                           
   666                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret = (Std_ReturnType)0x00;
   667   001036  0E00               	movlw	0
   668   001038  6E29               	movwf	gpio_pin_direction_intialize@ret^0,c
   669                           
   670                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }else{
   671   00103A  EF88  F008         	goto	l1210
   672   00103E                     l1202:
   673                           
   674                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:                 (*tris_registers[_pin_config->port] &= 
      +                          ~((uint8)1 << _pin_config->pin));
   675   00103E  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   676   001040  6ED9               	movwf	fsr2l,c
   677   001042  6ADA               	clrf	fsr2h,c
   678   001044  30DF               	rrcf	223,w,c
   679   001046  32E8               	rrcf	wreg,f,c
   680   001048  32E8               	rrcf	wreg,f,c
   681   00104A  0B07               	andlw	7
   682   00104C  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
   683   00104E  0E01               	movlw	1
   684   001050  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   685   001052  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
   686   001054  EF2E  F008         	goto	u484
   687   001058                     u485:
   688   001058  90D8               	bcf	status,0,c
   689   00105A  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   690   00105C                     u484:
   691   00105C  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   692   00105E  EF2C  F008         	goto	u485
   693   001062  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   694   001064  0AFF               	xorlw	255
   695   001066  6E26               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
   696   001068  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   697   00106A  6ED9               	movwf	fsr2l,c
   698   00106C  6ADA               	clrf	fsr2h,c
   699   00106E  50DF               	movf	223,w,c
   700   001070  0B07               	andlw	7
   701   001072  0D02               	mullw	2
   702   001074  50F3               	movf	243,w,c
   703   001076  0F15               	addlw	low _tris_registers
   704   001078  6ED9               	movwf	fsr2l,c
   705   00107A  6ADA               	clrf	fsr2h,c
   706   00107C  CFDE F027          	movff	postinc2,??_gpio_pin_direction_intialize+3
   707   001080  CFDD F028          	movff	postdec2,??_gpio_pin_direction_intialize+4
   708   001084  C027  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
   709   001088  C028  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
   710   00108C  5026               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
   711   00108E  16DF               	andwf	indf2,f,c
   712                           
   713                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
   714   001090  EF88  F008         	goto	l1210
   715   001094                     l1204:
   716                           
   717                           ;MCAL_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[_pin_config->port] |= 
      +                          ((uint8)1 << _pin_config->pin));
   718   001094  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   719   001096  6ED9               	movwf	fsr2l,c
   720   001098  6ADA               	clrf	fsr2h,c
   721   00109A  30DF               	rrcf	223,w,c
   722   00109C  32E8               	rrcf	wreg,f,c
   723   00109E  32E8               	rrcf	wreg,f,c
   724   0010A0  0B07               	andlw	7
   725   0010A2  6E24               	movwf	??_gpio_pin_direction_intialize^0,c
   726   0010A4  0E01               	movlw	1
   727   0010A6  6E25               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   728   0010A8  2A24               	incf	??_gpio_pin_direction_intialize^0,f,c
   729   0010AA  EF59  F008         	goto	u494
   730   0010AE                     u495:
   731   0010AE  90D8               	bcf	status,0,c
   732   0010B0  3625               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   733   0010B2                     u494:
   734   0010B2  2E24               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   735   0010B4  EF57  F008         	goto	u495
   736   0010B8  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   737   0010BA  6ED9               	movwf	fsr2l,c
   738   0010BC  6ADA               	clrf	fsr2h,c
   739   0010BE  50DF               	movf	223,w,c
   740   0010C0  0B07               	andlw	7
   741   0010C2  0D02               	mullw	2
   742   0010C4  50F3               	movf	243,w,c
   743   0010C6  0F15               	addlw	low _tris_registers
   744   0010C8  6ED9               	movwf	fsr2l,c
   745   0010CA  6ADA               	clrf	fsr2h,c
   746   0010CC  CFDE F026          	movff	postinc2,??_gpio_pin_direction_intialize+2
   747   0010D0  CFDD F027          	movff	postdec2,??_gpio_pin_direction_intialize+3
   748   0010D4  C026  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
   749   0010D8  C027  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
   750   0010DC  5025               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   751   0010DE  12DF               	iorwf	indf2,f,c
   752                           
   753                           ;MCAL_Layer/GPIO/hal_gpio.c: 35:               break;
   754   0010E0  EF88  F008         	goto	l1210
   755   0010E4                     l1208:
   756   0010E4  5023               	movf	gpio_pin_direction_intialize@_pin_config^0,w,c
   757   0010E6  6ED9               	movwf	fsr2l,c
   758   0010E8  6ADA               	clrf	fsr2h,c
   759   0010EA  BCDF               	btfsc	indf2,6,c
   760   0010EC  EF7A  F008         	goto	u501
   761   0010F0  EF7D  F008         	goto	u500
   762   0010F4                     u501:
   763   0010F4  0E01               	movlw	1
   764   0010F6  EF7E  F008         	goto	u506
   765   0010FA                     u500:
   766   0010FA  0E00               	movlw	0
   767   0010FC                     u506:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 2, Range of values is 0 to 1
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte            7     4 (average)
   774                           ;	Chosen strategy is simple_byte
   775   0010FC  0A00               	xorlw	0	; case 0
   776   0010FE  B4D8               	btfsc	status,2,c
   777   001100  EF1F  F008         	goto	l1202
   778   001104  0A01               	xorlw	1	; case 1
   779   001106  B4D8               	btfsc	status,2,c
   780   001108  EF4A  F008         	goto	l1204
   781   00110C  EF1B  F008         	goto	l1200
   782   001110                     l1210:
   783                           
   784                           ;MCAL_Layer/GPIO/hal_gpio.c: 39:     return ret ;
   785   001110  5029               	movf	gpio_pin_direction_intialize@ret^0,w,c
   786   001112  0012               	return		;funcret
   787   001114                     __end_of_gpio_pin_direction_intialize:
   788                           	callstack 0
   789                           
   790 ;; *************** function _Turn_Right *****************
   791 ;; Defined at:
   792 ;;		line 64 in file "application.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		_dc_motor_stop
   815 ;;		_dc_motor_turn_right
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text5
   822   001412                     __ptext5:
   823                           	callstack 0
   824   001412                     _Turn_Right:
   825                           	callstack 28
   826   001412                     
   827                           ;application.c: 65:     dc_motor_turn_right(&dc_motor_2);
   828   001412  0E1F               	movlw	low _dc_motor_2
   829   001414  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
   830   001416  ECAB  F009         	call	_dc_motor_turn_right	;wreg free
   831                           
   832                           ;application.c: 66:     dc_motor_stop(&dc_motor_1);
   833   00141A  0E21               	movlw	low _dc_motor_1
   834   00141C  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   835   00141E  EC94  F009         	call	_dc_motor_stop	;wreg free
   836   001422  0012               	return		;funcret
   837   001424                     __end_of_Turn_Right:
   838                           	callstack 0
   839                           
   840 ;; *************** function _Turn_Left *****************
   841 ;; Defined at:
   842 ;;		line 68 in file "application.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 2
   863 ;; This function calls:
   864 ;;		_dc_motor_stop
   865 ;;		_dc_motor_turn_right
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text6
   872   001424                     __ptext6:
   873                           	callstack 0
   874   001424                     _Turn_Left:
   875                           	callstack 28
   876   001424                     
   877                           ;application.c: 69:     dc_motor_turn_right(&dc_motor_1);
   878   001424  0E21               	movlw	low _dc_motor_1
   879   001426  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
   880   001428  ECAB  F009         	call	_dc_motor_turn_right	;wreg free
   881                           
   882                           ;application.c: 70:     dc_motor_stop(&dc_motor_2);
   883   00142C  0E1F               	movlw	low _dc_motor_2
   884   00142E  6E2B               	movwf	dc_motor_stop@_dc_motor^0,c
   885   001430  EC94  F009         	call	_dc_motor_stop	;wreg free
   886   001434  0012               	return		;funcret
   887   001436                     __end_of_Turn_Left:
   888                           	callstack 0
   889                           
   890 ;; *************** function _dc_motor_stop *****************
   891 ;; Defined at:
   892 ;;		line 74 in file "ECU_Layer/DC_motor/DC_motor.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
   895 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  ret             1    0        unsigned char 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      unsigned char 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;Total ram usage:        1 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 1
   914 ;; This function calls:
   915 ;;		_gpio_pin_write_logic
   916 ;; This function is called by:
   917 ;;		_Turn_Right
   918 ;;		_Turn_Left
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text7
   923   001328                     __ptext7:
   924                           	callstack 0
   925   001328                     _dc_motor_stop:
   926                           	callstack 28
   927   001328                     
   928                           ;ECU_Layer/DC_motor/DC_motor.c: 76:      if(((void*)0)==_dc_motor){
   929   001328  502B               	movf	dc_motor_stop@_dc_motor^0,w,c
   930   00132A  A4D8               	btfss	status,2,c
   931   00132C  EF9A  F009         	goto	u561
   932   001330  EF9C  F009         	goto	u560
   933   001334                     u561:
   934   001334  EF9E  F009         	goto	l1254
   935   001338                     u560:
   936   001338                     
   937                           ;ECU_Layer/DC_motor/DC_motor.c: 78:      }else{
   938   001338  EFAA  F009         	goto	l62
   939   00133C                     l1254:
   940                           
   941                           ;ECU_Layer/DC_motor/DC_motor.c: 79:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
   942   00133C  C02B  F023         	movff	dc_motor_stop@_dc_motor,gpio_pin_write_logic@_pin_config
   943   001340  0E00               	movlw	0
   944   001342  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   945   001344  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   946                           
   947                           ;ECU_Layer/DC_motor/DC_motor.c: 80:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
   948   001348  282B               	incf	dc_motor_stop@_dc_motor^0,w,c
   949   00134A  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
   950   00134C  0E00               	movlw	0
   951   00134E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
   952   001350  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   953   001354                     l62:
   954   001354  0012               	return		;funcret
   955   001356                     __end_of_dc_motor_stop:
   956                           	callstack 0
   957                           
   958 ;; *************** function _Go_Forward *****************
   959 ;; Defined at:
   960 ;;		line 56 in file "application.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 2
   981 ;; This function calls:
   982 ;;		_dc_motor_turn_right
   983 ;; This function is called by:
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text8
   989   001436                     __ptext8:
   990                           	callstack 0
   991   001436                     _Go_Forward:
   992                           	callstack 28
   993   001436                     
   994                           ;application.c: 57:     dc_motor_turn_right(&dc_motor_1);
   995   001436  0E21               	movlw	low _dc_motor_1
   996   001438  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
   997   00143A  ECAB  F009         	call	_dc_motor_turn_right	;wreg free
   998                           
   999                           ;application.c: 58:     dc_motor_turn_right(&dc_motor_2);
  1000   00143E  0E1F               	movlw	low _dc_motor_2
  1001   001440  6E2B               	movwf	dc_motor_turn_right@_dc_motor^0,c
  1002   001442  ECAB  F009         	call	_dc_motor_turn_right	;wreg free
  1003   001446  0012               	return		;funcret
  1004   001448                     __end_of_Go_Forward:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _dc_motor_turn_right *****************
  1008 ;; Defined at:
  1009 ;;		line 38 in file "ECU_Layer/DC_motor/DC_motor.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
  1012 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  ret             1    0        unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 1
  1031 ;; This function calls:
  1032 ;;		_gpio_pin_write_logic
  1033 ;; This function is called by:
  1034 ;;		_Go_Forward
  1035 ;;		_Turn_Right
  1036 ;;		_Turn_Left
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text9
  1041   001356                     __ptext9:
  1042                           	callstack 0
  1043   001356                     _dc_motor_turn_right:
  1044                           	callstack 28
  1045   001356                     
  1046                           ;ECU_Layer/DC_motor/DC_motor.c: 40:      if(((void*)0)==_dc_motor){
  1047   001356  502B               	movf	dc_motor_turn_right@_dc_motor^0,w,c
  1048   001358  A4D8               	btfss	status,2,c
  1049   00135A  EFB1  F009         	goto	u541
  1050   00135E  EFB3  F009         	goto	u540
  1051   001362                     u541:
  1052   001362  EFB5  F009         	goto	l1238
  1053   001366                     u540:
  1054   001366                     
  1055                           ;ECU_Layer/DC_motor/DC_motor.c: 42:      }else{
  1056   001366  EFC1  F009         	goto	l52
  1057   00136A                     l1238:
  1058                           
  1059                           ;ECU_Layer/DC_motor/DC_motor.c: 43:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_HIGH);
  1060   00136A  C02B  F023         	movff	dc_motor_turn_right@_dc_motor,gpio_pin_write_logic@_pin_config
  1061   00136E  0E01               	movlw	1
  1062   001370  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1063   001372  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
  1064                           
  1065                           ;ECU_Layer/DC_motor/DC_motor.c: 44:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_LOW);
  1066   001376  282B               	incf	dc_motor_turn_right@_dc_motor^0,w,c
  1067   001378  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1068   00137A  0E00               	movlw	0
  1069   00137C  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1070   00137E  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
  1071   001382                     l52:
  1072   001382  0012               	return		;funcret
  1073   001384                     __end_of_dc_motor_turn_right:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _Go_Backward *****************
  1077 ;; Defined at:
  1078 ;;		line 60 in file "application.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 2
  1099 ;; This function calls:
  1100 ;;		_dc_motor_turn_left
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text10
  1107   001448                     __ptext10:
  1108                           	callstack 0
  1109   001448                     _Go_Backward:
  1110                           	callstack 28
  1111   001448                     
  1112                           ;application.c: 61:     dc_motor_turn_left(&dc_motor_1);
  1113   001448  0E21               	movlw	low _dc_motor_1
  1114   00144A  6E2B               	movwf	dc_motor_turn_left@_dc_motor^0,c
  1115   00144C  ECC2  F009         	call	_dc_motor_turn_left	;wreg free
  1116                           
  1117                           ;application.c: 62:     dc_motor_turn_left(&dc_motor_2);
  1118   001450  0E1F               	movlw	low _dc_motor_2
  1119   001452  6E2B               	movwf	dc_motor_turn_left@_dc_motor^0,c
  1120   001454  ECC2  F009         	call	_dc_motor_turn_left	;wreg free
  1121   001458  0012               	return		;funcret
  1122   00145A                     __end_of_Go_Backward:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _dc_motor_turn_left *****************
  1126 ;; Defined at:
  1127 ;;		line 56 in file "ECU_Layer/DC_motor/DC_motor.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  _dc_motor       1    8[COMRAM] PTR const struct .
  1130 ;;		 -> dc_motor_2(2), dc_motor_1(2), 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  ret             1    0        unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1142 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;Total ram usage:        1 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; Hardware stack levels required when called: 1
  1149 ;; This function calls:
  1150 ;;		_gpio_pin_write_logic
  1151 ;; This function is called by:
  1152 ;;		_Go_Backward
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text11
  1157   001384                     __ptext11:
  1158                           	callstack 0
  1159   001384                     _dc_motor_turn_left:
  1160                           	callstack 28
  1161   001384                     
  1162                           ;ECU_Layer/DC_motor/DC_motor.c: 58:      if(((void*)0)==_dc_motor){
  1163   001384  502B               	movf	dc_motor_turn_left@_dc_motor^0,w,c
  1164   001386  A4D8               	btfss	status,2,c
  1165   001388  EFC8  F009         	goto	u551
  1166   00138C  EFCA  F009         	goto	u550
  1167   001390                     u551:
  1168   001390  EFCC  F009         	goto	l1246
  1169   001394                     u550:
  1170   001394                     
  1171                           ;ECU_Layer/DC_motor/DC_motor.c: 60:      }else{
  1172   001394  EFD8  F009         	goto	l57
  1173   001398                     l1246:
  1174                           
  1175                           ;ECU_Layer/DC_motor/DC_motor.c: 61:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[0]),GPIO_LOW);
  1176   001398  C02B  F023         	movff	dc_motor_turn_left@_dc_motor,gpio_pin_write_logic@_pin_config
  1177   00139C  0E00               	movlw	0
  1178   00139E  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1179   0013A0  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
  1180                           
  1181                           ;ECU_Layer/DC_motor/DC_motor.c: 62:          gpio_pin_write_logic(&(_dc_motor->dc_motor_
      +                          pin[1]),GPIO_HIGH);
  1182   0013A4  282B               	incf	dc_motor_turn_left@_dc_motor^0,w,c
  1183   0013A6  6E23               	movwf	gpio_pin_write_logic@_pin_config^0,c
  1184   0013A8  0E01               	movlw	1
  1185   0013AA  6E24               	movwf	gpio_pin_write_logic@logic^0,c
  1186   0013AC  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
  1187   0013B0                     l57:
  1188   0013B0  0012               	return		;funcret
  1189   0013B2                     __end_of_dc_motor_turn_left:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _gpio_pin_write_logic *****************
  1193 ;; Defined at:
  1194 ;;		line 70 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  _pin_config     1    0[COMRAM] PTR const struct .
  1197 ;;		 -> dc_motor_2$dc_motor_pin(2), dc_motor_2(2), dc_motor_1$dc_motor_pin(2), dc_motor_1(2), 
  1198 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_intialize@pin_obj(1), 
  1199 ;;  logic           1    1[COMRAM] enum E2494
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  ret             1    7[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        8 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; This function calls:
  1218 ;;		Nothing
  1219 ;; This function is called by:
  1220 ;;		_dc_motor_turn_right
  1221 ;;		_dc_motor_turn_left
  1222 ;;		_dc_motor_stop
  1223 ;;		_gpio_pin_intialize
  1224 ;;		_led_turn_on
  1225 ;;		_led_turn_off
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text12
  1230   001114                     __ptext12:
  1231                           	callstack 0
  1232   001114                     _gpio_pin_write_logic:
  1233                           	callstack 27
  1234   001114                     
  1235                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     Std_ReturnType ret = (Std_ReturnType)0x01 ;
  1236   001114  0E01               	movlw	1
  1237   001116  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
  1238                           
  1239                           ;MCAL_Layer/GPIO/hal_gpio.c: 72:     if(((void*)0)==_pin_config|| _pin_config->pin >8 -1
      +                           ){
  1240   001118  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1241   00111A  B4D8               	btfsc	status,2,c
  1242   00111C  EF92  F008         	goto	u421
  1243   001120  EF94  F008         	goto	u420
  1244   001124                     u421:
  1245   001124  EFA4  F008         	goto	l1178
  1246   001128                     u420:
  1247   001128  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1248   00112A  6ED9               	movwf	fsr2l,c
  1249   00112C  6ADA               	clrf	fsr2h,c
  1250   00112E  30DF               	rrcf	223,w,c
  1251   001130  32E8               	rrcf	wreg,f,c
  1252   001132  32E8               	rrcf	wreg,f,c
  1253   001134  0B07               	andlw	7
  1254   001136  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1255   001138  0E07               	movlw	7
  1256   00113A  6425               	cpfsgt	??_gpio_pin_write_logic^0,c
  1257   00113C  EFA2  F008         	goto	u431
  1258   001140  EFA4  F008         	goto	u430
  1259   001144                     u431:
  1260   001144  EFFB  F008         	goto	l1186
  1261   001148                     u430:
  1262   001148                     l1178:
  1263                           
  1264                           ;MCAL_Layer/GPIO/hal_gpio.c: 73:         ret = (Std_ReturnType)0x00;
  1265   001148  0E00               	movlw	0
  1266   00114A  6E2A               	movwf	gpio_pin_write_logic@ret^0,c
  1267                           
  1268                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     }else{
  1269   00114C  EF10  F009         	goto	l1188
  1270   001150                     l1180:
  1271                           
  1272                           ;MCAL_Layer/GPIO/hal_gpio.c: 77:                 (*lat_registers[_pin_config->port] |= (
      +                          (uint8)1 << _pin_config->pin));
  1273   001150  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1274   001152  6ED9               	movwf	fsr2l,c
  1275   001154  6ADA               	clrf	fsr2h,c
  1276   001156  30DF               	rrcf	223,w,c
  1277   001158  32E8               	rrcf	wreg,f,c
  1278   00115A  32E8               	rrcf	wreg,f,c
  1279   00115C  0B07               	andlw	7
  1280   00115E  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1281   001160  0E01               	movlw	1
  1282   001162  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1283   001164  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1284   001166  EFB7  F008         	goto	u444
  1285   00116A                     u445:
  1286   00116A  90D8               	bcf	status,0,c
  1287   00116C  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1288   00116E                     u444:
  1289   00116E  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1290   001170  EFB5  F008         	goto	u445
  1291   001174  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1292   001176  6ED9               	movwf	fsr2l,c
  1293   001178  6ADA               	clrf	fsr2h,c
  1294   00117A  50DF               	movf	223,w,c
  1295   00117C  0B07               	andlw	7
  1296   00117E  0D02               	mullw	2
  1297   001180  50F3               	movf	243,w,c
  1298   001182  0F0B               	addlw	low _lat_registers
  1299   001184  6ED9               	movwf	fsr2l,c
  1300   001186  6ADA               	clrf	fsr2h,c
  1301   001188  CFDE F027          	movff	postinc2,??_gpio_pin_write_logic+2
  1302   00118C  CFDD F028          	movff	postdec2,??_gpio_pin_write_logic+3
  1303   001190  C027  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1304   001194  C028  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1305   001198  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1306   00119A  12DF               	iorwf	indf2,f,c
  1307                           
  1308                           ;MCAL_Layer/GPIO/hal_gpio.c: 78:                 break;
  1309   00119C  EF10  F009         	goto	l1188
  1310   0011A0                     l1182:
  1311                           
  1312                           ;MCAL_Layer/GPIO/hal_gpio.c: 80:                 (*lat_registers[_pin_config->port] &= ~
      +                          ((uint8)1 << _pin_config->pin));
  1313   0011A0  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1314   0011A2  6ED9               	movwf	fsr2l,c
  1315   0011A4  6ADA               	clrf	fsr2h,c
  1316   0011A6  30DF               	rrcf	223,w,c
  1317   0011A8  32E8               	rrcf	wreg,f,c
  1318   0011AA  32E8               	rrcf	wreg,f,c
  1319   0011AC  0B07               	andlw	7
  1320   0011AE  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1321   0011B0  0E01               	movlw	1
  1322   0011B2  6E26               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1323   0011B4  2A25               	incf	??_gpio_pin_write_logic^0,f,c
  1324   0011B6  EFDF  F008         	goto	u454
  1325   0011BA                     u455:
  1326   0011BA  90D8               	bcf	status,0,c
  1327   0011BC  3626               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1328   0011BE                     u454:
  1329   0011BE  2E25               	decfsz	??_gpio_pin_write_logic^0,f,c
  1330   0011C0  EFDD  F008         	goto	u455
  1331   0011C4  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1332   0011C6  0AFF               	xorlw	255
  1333   0011C8  6E27               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1334   0011CA  5023               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1335   0011CC  6ED9               	movwf	fsr2l,c
  1336   0011CE  6ADA               	clrf	fsr2h,c
  1337   0011D0  50DF               	movf	223,w,c
  1338   0011D2  0B07               	andlw	7
  1339   0011D4  0D02               	mullw	2
  1340   0011D6  50F3               	movf	243,w,c
  1341   0011D8  0F0B               	addlw	low _lat_registers
  1342   0011DA  6ED9               	movwf	fsr2l,c
  1343   0011DC  6ADA               	clrf	fsr2h,c
  1344   0011DE  CFDE F028          	movff	postinc2,??_gpio_pin_write_logic+3
  1345   0011E2  CFDD F029          	movff	postdec2,??_gpio_pin_write_logic+4
  1346   0011E6  C028  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1347   0011EA  C029  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1348   0011EE  5027               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1349   0011F0  16DF               	andwf	indf2,f,c
  1350                           
  1351                           ;MCAL_Layer/GPIO/hal_gpio.c: 81:                 break;
  1352   0011F2  EF10  F009         	goto	l1188
  1353   0011F6                     l1186:
  1354   0011F6  5024               	movf	gpio_pin_write_logic@logic^0,w,c
  1355   0011F8  6E25               	movwf	??_gpio_pin_write_logic^0,c
  1356   0011FA  6A26               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1357                           
  1358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 1, Range of values is 0 to 0
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte            4     3 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365   0011FC  5026               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1366   0011FE  0A00               	xorlw	0	; case 0
  1367   001200  B4D8               	btfsc	status,2,c
  1368   001202  EF05  F009         	goto	l1332
  1369   001206  EFA4  F008         	goto	l1178
  1370   00120A                     l1332:
  1371                           
  1372                           ; Switch size 1, requested type "simple"
  1373                           ; Number of cases is 2, Range of values is 0 to 1
  1374                           ; switch strategies available:
  1375                           ; Name         Instructions Cycles
  1376                           ; simple_byte            7     4 (average)
  1377                           ;	Chosen strategy is simple_byte
  1378   00120A  5025               	movf	??_gpio_pin_write_logic^0,w,c
  1379   00120C  0A00               	xorlw	0	; case 0
  1380   00120E  B4D8               	btfsc	status,2,c
  1381   001210  EFD0  F008         	goto	l1182
  1382   001214  0A01               	xorlw	1	; case 1
  1383   001216  B4D8               	btfsc	status,2,c
  1384   001218  EFA8  F008         	goto	l1180
  1385   00121C  EFA4  F008         	goto	l1178
  1386   001220                     l1188:
  1387                           
  1388                           ;MCAL_Layer/GPIO/hal_gpio.c: 85:         return ret ;
  1389   001220  502A               	movf	gpio_pin_write_logic@ret^0,w,c
  1390   001222  0012               	return		;funcret
  1391   001224                     __end_of_gpio_pin_write_logic:
  1392                           	callstack 0
  1393                           
  1394                           	psect	smallconst
  1395   001000                     __psmallconst:
  1396                           	callstack 0
  1397   001000  00                 	db	0
  1398   001001  00                 	db	0	; dummy byte at the end
  1399   000000                     
  1400                           	psect	rparam
  1401   000000                     
  1402                           	psect	config
  1403                           
  1404                           ; Padding undefined space
  1405   300000                     	org	3145728
  1406   300000  FF                 	db	255
  1407                           
  1408                           ;Config register CONFIG1H @ 0x300001
  1409                           ;	Oscillator Selection bits
  1410                           ;	OSC = HS, HS oscillator
  1411                           ;	Fail-Safe Clock Monitor Enable bit
  1412                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1413                           ;	Internal/External Oscillator Switchover bit
  1414                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1415   300001                     	org	3145729
  1416   300001  02                 	db	2
  1417                           
  1418                           ;Config register CONFIG2L @ 0x300002
  1419                           ;	Power-up Timer Enable bit
  1420                           ;	PWRT = OFF, PWRT disabled
  1421                           ;	Brown-out Reset Enable bits
  1422                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1423                           ;	Brown Out Reset Voltage bits
  1424                           ;	BORV = 1, 
  1425   300002                     	org	3145730
  1426   300002  09                 	db	9
  1427                           
  1428                           ;Config register CONFIG2H @ 0x300003
  1429                           ;	Watchdog Timer Enable bit
  1430                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1431                           ;	Watchdog Timer Postscale Select bits
  1432                           ;	WDTPS = 32768, 1:32768
  1433   300003                     	org	3145731
  1434   300003  1E                 	db	30
  1435                           
  1436                           ; Padding undefined space
  1437   300004                     	org	3145732
  1438   300004  FF                 	db	255
  1439                           
  1440                           ;Config register CONFIG3H @ 0x300005
  1441                           ;	CCP2 MUX bit
  1442                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1443                           ;	PORTB A/D Enable bit
  1444                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1445                           ;	Low-Power Timer1 Oscillator Enable bit
  1446                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1447                           ;	MCLR Pin Enable bit
  1448                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1449   300005                     	org	3145733
  1450   300005  81                 	db	129
  1451                           
  1452                           ;Config register CONFIG4L @ 0x300006
  1453                           ;	Stack Full/Underflow Reset Enable bit
  1454                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1455                           ;	Single-Supply ICSP Enable bit
  1456                           ;	LVP = OFF, Single-Supply ICSP disabled
  1457                           ;	Extended Instruction Set Enable bit
  1458                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1459                           ;	Background Debugger Enable bit
  1460                           ;	DEBUG = 0x1, unprogrammed default
  1461   300006                     	org	3145734
  1462   300006  81                 	db	129
  1463                           
  1464                           ; Padding undefined space
  1465   300007                     	org	3145735
  1466   300007  FF                 	db	255
  1467                           
  1468                           ;Config register CONFIG5L @ 0x300008
  1469                           ;	Code Protection bit
  1470                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1471                           ;	Code Protection bit
  1472                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1473                           ;	Code Protection bit
  1474                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1475                           ;	Code Protection bit
  1476                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1477   300008                     	org	3145736
  1478   300008  0F                 	db	15
  1479                           
  1480                           ;Config register CONFIG5H @ 0x300009
  1481                           ;	Boot Block Code Protection bit
  1482                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1483                           ;	Data EEPROM Code Protection bit
  1484                           ;	CPD = OFF, Data EEPROM not code-protected
  1485   300009                     	org	3145737
  1486   300009  C0                 	db	192
  1487                           
  1488                           ;Config register CONFIG6L @ 0x30000A
  1489                           ;	Write Protection bit
  1490                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1491                           ;	Write Protection bit
  1492                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1493                           ;	Write Protection bit
  1494                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1495                           ;	Write Protection bit
  1496                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1497   30000A                     	org	3145738
  1498   30000A  0F                 	db	15
  1499                           
  1500                           ;Config register CONFIG6H @ 0x30000B
  1501                           ;	Configuration Register Write Protection bit
  1502                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1503                           ;	Boot Block Write Protection bit
  1504                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1505                           ;	Data EEPROM Write Protection bit
  1506                           ;	WRTD = OFF, Data EEPROM not write-protected
  1507   30000B                     	org	3145739
  1508   30000B  E0                 	db	224
  1509                           
  1510                           ;Config register CONFIG7L @ 0x30000C
  1511                           ;	Table Read Protection bit
  1512                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1513                           ;	Table Read Protection bit
  1514                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1515                           ;	Table Read Protection bit
  1516                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1517                           ;	Table Read Protection bit
  1518                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1519   30000C                     	org	3145740
  1520   30000C  0F                 	db	15
  1521                           
  1522                           ;Config register CONFIG7H @ 0x30000D
  1523                           ;	Boot Block Table Read Protection bit
  1524                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1525   30000D                     	org	3145741
  1526   30000D  40                 	db	64
  1527                           tosu	equ	0xFFF
  1528                           tosh	equ	0xFFE
  1529                           tosl	equ	0xFFD
  1530                           stkptr	equ	0xFFC
  1531                           pclatu	equ	0xFFB
  1532                           pclath	equ	0xFFA
  1533                           pcl	equ	0xFF9
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           prodh	equ	0xFF4
  1539                           prodl	equ	0xFF3
  1540                           indf0	equ	0xFEF
  1541                           postinc0	equ	0xFEE
  1542                           postdec0	equ	0xFED
  1543                           preinc0	equ	0xFEC
  1544                           plusw0	equ	0xFEB
  1545                           fsr0h	equ	0xFEA
  1546                           fsr0l	equ	0xFE9
  1547                           wreg	equ	0xFE8
  1548                           indf1	equ	0xFE7
  1549                           postinc1	equ	0xFE6
  1550                           postdec1	equ	0xFE5
  1551                           preinc1	equ	0xFE4
  1552                           plusw1	equ	0xFE3
  1553                           fsr1h	equ	0xFE2
  1554                           fsr1l	equ	0xFE1
  1555                           bsr	equ	0xFE0
  1556                           indf2	equ	0xFDF
  1557                           postinc2	equ	0xFDE
  1558                           postdec2	equ	0xFDD
  1559                           preinc2	equ	0xFDC
  1560                           plusw2	equ	0xFDB
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    dc_motor_intialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_turn_left@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    dc_motor_turn_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_2(COMRAM[2]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_intialize@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pin(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pin(COMRAM[2]), 
		 -> led_intialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _application_intialize->_dc_motor_intialize
    _dc_motor_intialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic
    _Turn_Right->_dc_motor_stop
    _Turn_Right->_dc_motor_turn_right
    _Turn_Left->_dc_motor_stop
    _Turn_Left->_dc_motor_turn_right
    _dc_motor_stop->_gpio_pin_write_logic
    _Go_Forward->_dc_motor_turn_right
    _dc_motor_turn_right->_gpio_pin_write_logic
    _Go_Backward->_dc_motor_turn_left
    _dc_motor_turn_left->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13428
                                             12 COMRAM     2     2      0
                        _Go_Backward
                         _Go_Forward
                          _Turn_Left
                         _Turn_Right
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                0     0      0    2370
                 _dc_motor_intialize
 ---------------------------------------------------------------------------------
 (2) _dc_motor_intialize                                   2     1      1    2370
                                             11 COMRAM     1     0      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   3     2      1    2150
                                              8 COMRAM     3     2      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         7     6      1     255
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _Turn_Right                                           0     0      0    3686
                      _dc_motor_stop
                _dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _Turn_Left                                            0     0      0    3686
                      _dc_motor_stop
                _dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (2) _dc_motor_stop                                        2     1      1    1767
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Go_Forward                                           0     0      0    1919
                _dc_motor_turn_right
 ---------------------------------------------------------------------------------
 (2) _dc_motor_turn_right                                  2     1      1    1919
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _Go_Backward                                          0     0      0    1767
                 _dc_motor_turn_left
 ---------------------------------------------------------------------------------
 (2) _dc_motor_turn_left                                   2     1      1    1767
                                              8 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 8     6      2    1547
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Go_Backward
     _dc_motor_turn_left
       _gpio_pin_write_logic
   _Go_Forward
     _dc_motor_turn_right
       _gpio_pin_write_logic
   _Turn_Left
     _dc_motor_stop
       _gpio_pin_write_logic
     _dc_motor_turn_right
   _Turn_Right
     _dc_motor_stop
     _dc_motor_turn_right
   _application_intialize
     _dc_motor_intialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      37       1       43.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      39        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Nov 08 16:05:11 2024

                                     l52 1382                                       l62 1354  
                                     l47 13D8                                       l57 13B0  
                                    l110 1112                                      l220 1410  
                                    l150 12F0                                      l214 1292  
                                    l223 1446                                      l215 1292  
                                    l232 1434                                      l129 1222  
                                    l226 1458                                      l229 1422  
                                    u420 1128                                      u500 10FA  
                                    u421 1124                                      u501 10F4  
                                    u430 1148                                      u510 12AA  
                                    u431 1144                                      u511 12A6  
                                    u520 12CA                                      u521 12C6  
                                    u506 10FC                                      u530 13C2  
                                    u531 13BE                                      u444 116E  
                                    u540 1366                                      u460 1016  
                                    u445 116A                                      u541 1362  
                                    u461 1012                                      u454 11BE  
                                    u550 1394                                      u470 1036  
                                    u455 11BA                                      u551 1390  
                                    u471 1032                                      u560 1338  
                                    u561 1334                                      u484 105C  
                                    u485 1058                                      u637 1236  
                                    u494 10B2                                      u495 10AE  
                                    u647 1250                                      u657 126A  
                                    u667 1286                                      _ret 0037  
                                    wreg 0FE8                                     l1200 1036  
                                   l1202 103E                                     l1210 1110  
                                   l1204 1094                                     l1220 12CE  
                                   l1214 129A                                     l1230 13D6  
                                   l1208 10E4                                     l1216 12AA  
                                   l1224 13B2                                     l1320 1242  
                                   l1242 1384                                     l1234 1356  
                                   l1250 1328                                     l1218 12CA  
                                   l1226 13C2                                     l1322 125C  
                                   l1332 120A                                     l1180 1150  
                                   l1244 1394                                     l1236 1366  
                                   l1260 1436                                     l1252 1338  
                                   l1228 13C6                                     l1324 1260  
                                   l1316 1224                                     l1182 11A0  
                                   l1174 1114                                     l1246 1398  
                                   l1238 136A                                     l1254 133C  
                                   l1262 1412                                     l1326 127C  
                                   l1318 122C                                     l1176 1128  
                                   l1264 1424                                     l1186 11F6  
                                   l1178 1148                                     l1266 1448  
                                   l1258 13FC                                     l1188 1220  
                                   l1196 1002                                     l1198 1016  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     _LATD 0F8C  
                                   _LATE 0F8D                  ??_application_intialize 002F  
                                   _main 1224                                     fsr2h 0FDA  
                                   indf2 0FDF                                     fsr1l 0FE1  
                                   fsr2l 0FD9                                     prodl 0FF3  
                                   start 0000                             ___param_bank 0000  
                             _Go_Forward 1436                     _gpio_pin_write_logic 1114  
                                  ?_main 0023                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                              _Go_Backward 1448  
                                  tablat 0FF5                                    status 0FD8  
                        __initialization 12F2              dc_motor_turn_left@_dc_motor 002B  
                           __end_of_main 129A                    ?_gpio_pin_write_logic 0023  
                          _lat_registers 000B                                   ??_main 002F  
                          __activetblptr 0002                         led_turn_on@F2579 0035  
                            ?_Go_Forward 0023                                   isa$std 0001  
gpio_pin_direction_intialize@_pin_config 0023                             __pdataCOMRAM 0001  
                           __mediumconst 0000                                   tblptrh 0FF7  
                                 tblptrl 0FF6                                   tblptru 0FF8  
                             __accesstop 0080                  __end_of__initialization 131E  
                          ___rparam_used 0001                   ??_gpio_pin_write_logic 0025  
                         __pcstackCOMRAM 0023                               _Turn_Right 1412  
            __end_of_dc_motor_turn_right 1384                               _dc_motor_1 0021  
                             _dc_motor_2 001F                               __pnvCOMRAM 0037  
          __end_of_application_intialize 1412                        led_turn_off@F2584 0034  
                      __end_of_Turn_Left 1436                     led_turn_toggle@F2589 0033  
                           ?_Go_Backward 0023                           _tris_registers 0015  
                                __Hparam 0000                                  __Lparam 0000  
                            ?_Turn_Right 0023                             __psmallconst 1000  
             __end_of_gpio_pin_intialize 12F2                                  __pcinit 12F2  
                                __ramtop 1000                                  __ptext0 1224  
                                __ptext1 13FC                                  __ptext2 13B2  
                                __ptext3 129A                                  __ptext4 1002  
                                __ptext5 1412                                  __ptext6 1424  
                                __ptext7 1328                                  __ptext8 1436  
                                __ptext9 1356                     end_of_initialization 131E  
                          __Lmediumconst 0000                    gpio_pin_intialize@ret 002D  
                          _dc_motor_stop 1328                             ??_Go_Forward 002C  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
                             _motor_pin1 0032                               _motor_pin2 0031  
          gpio_pin_intialize@_pin_config 002B     __end_of_gpio_pin_direction_intialize 1114  
           _gpio_pin_direction_intialize 1002                       __end_of_Go_Forward 1448  
                         ?_dc_motor_stop 002B                            __pidataCOMRAM 13DA  
                    start_initialization 12F2            ?_gpio_pin_direction_intialize 0023  
             __end_of_dc_motor_intialize 13DA                   dc_motor_stop@_dc_motor 002B  
                            __pbssCOMRAM 0031                                _Turn_Left 1424  
             __end_of_dc_motor_turn_left 13B2          gpio_pin_direction_intialize@ret 0029  
                        ??_dc_motor_stop 002C                    _application_intialize 13FC  
                           ??_Turn_Right 002C          gpio_pin_write_logic@_pin_config 0023  
              gpio_pin_write_logic@logic 0024                              __smallconst 1000  
           dc_motor_turn_right@_dc_motor 002B                               ?_Turn_Left 0023  
                     _gpio_pin_intialize 129A                       __end_of_Turn_Right 1424  
         ??_gpio_pin_direction_intialize 0024                      ?_gpio_pin_intialize 002B  
                   ??_gpio_pin_intialize 002C                  gpio_pin_write_logic@ret 002A  
                              copy_data0 1306                   ?_application_intialize 0023  
                               __Hrparam 0000                                 __Lrparam 0000  
                     led_intialize@F2574 0036                              ??_Turn_Left 002C  
                               __ptext10 1448                                 __ptext11 1384  
                               __ptext12 1114                                 isa$xinst 0000  
                    _dc_motor_turn_right 1356                       _dc_motor_intialize 13B2  
                    ?_dc_motor_intialize 002E                     ?_dc_motor_turn_right 002B  
           __end_of_gpio_pin_write_logic 1224                            ??_Go_Backward 002C  
                   ??_dc_motor_intialize 002F                       _dc_motor_turn_left 1384  
                    ?_dc_motor_turn_left 002B                           _port_registers 0001  
                  ??_dc_motor_turn_right 002C                     ??_dc_motor_turn_left 002C  
                    __end_of_Go_Backward 145A                    __end_of_dc_motor_stop 1356  
            dc_motor_intialize@_dc_motor 002E  
